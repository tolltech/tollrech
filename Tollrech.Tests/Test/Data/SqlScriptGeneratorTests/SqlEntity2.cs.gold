using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using SKBKontur.Billy.Core.Common.Quering;
using SKBKontur.Billy.Core.Common.Quering.Attributes;

namespace Tollrech.Tests.Test.Data.SqlScriptGeneratorTests
{
  /// IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'SqlEntities')
  /// CREATE TABLE [dbo].[SqlEntities](
  ///     [Id] [uniqueidentifier] NOT NULL,
  ///     [Amount] [decimal] (18, 2) NOT NULL,
  ///     [Number] [nvarchar] (50) NOT NULL,
  ///     [Number2] [nvarchar] (MAX) NOT NULL,
  ///     [Type_New] [int] NOT NULL,
  ///     [KbaIncomingDate] [datetime2] NULL,
  ///     [TimeStamp] [bigint] NOT NULL,
  ///     [IsDeleted] [bit] NOT NULL,
  ///     [Timestamp2] [rowversion] NOT NULL,
  ///     CONSTRAINT[PK_SqlEntities] PRIMARY KEY CLUSTERED([Id] ASC)
  /// )
  [Table("SqlEntities")]
    public class SqlEntity2{caret}
    {
        [Column("Id", TypeName = ColumnTypeNames.UniqueIdentifier), Key, Required, ConcurrencyCheck]
        public Guid Id { get; set; }

        [Column("Amount", TypeName = "decimal"), Required, ConcurrencyCheck, DecimalPrecision(18, 2)]
        public decimal Amount { get; set; }

        [Column("Number", TypeName = ColumnTypeNames.NVarChar), Required(AllowEmptyStrings = true), ConcurrencyCheck, MaxLength(50)]
        public string Number { get; set; }

        [Column("Number2", TypeName = ColumnTypeNames.NVarChar), Required(AllowEmptyStrings = true), ConcurrencyCheck]
        public string Number2 { get; set; }

        [Column("Type_New", TypeName = "int"), Required, ConcurrencyCheck]
        public MyEnum2 Type { get; set; }

        [Column("KbaIncomingDate", TypeName = "datetime2"), ConcurrencyCheck]
        public DateTime? KbaIncomingDate { get; set; }

        [Column("TimeStamp", TypeName = "bigint"), Required, ConcurrencyCheck]
        public long TimeStamp { get; set; }

        [Column("IsDeleted", TypeName = ColumnTypeNames.Bit), Required, ConcurrencyCheck]
        public bool IsDeleted { get; set; }

        [Column("Timestamp2"), Timestamp, DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        public byte[] Timestamp2 { get; set; }
    }

    public enum MyEnum2
    {

    }
}

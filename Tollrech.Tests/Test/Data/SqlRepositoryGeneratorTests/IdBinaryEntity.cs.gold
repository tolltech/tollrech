using System;

namespace Tollrech.Tests.Test.Data.SqlMapGeneratorTests
{
    [Table("InvoiceTransactions")]
    public class InvoiceTransactionDbo{caret}
    {
        [Column("Id", TypeName = ColumnTypeNames.UniqueIdentifier), Key, ConcurrencyCheck, Required]
        public Guid Id { get; set; }

        [Column("FromBillId", TypeName = ColumnTypeNames.UniqueIdentifier), ConcurrencyCheck]
        public Guid? FromBillId { get; set; }

        [Column("ToBillId", TypeName = ColumnTypeNames.UniqueIdentifier), ConcurrencyCheck]
        public Guid? ToBillId { get; set; }

        [Column("CashTransactionId", TypeName = ColumnTypeNames.UniqueIdentifier), ConcurrencyCheck, Required]
        public Guid CashTransactionId { get; set; }

        [Column("Amount", TypeName = ColumnTypeNames.Decimal), ConcurrencyCheck, Required]
        public long Amount { get; set; }

        [Column("OperationDate", TypeName = ColumnTypeNames.DateTime2), ConcurrencyCheck, Required]
        public DateTime OperationDate { get; set; }

        [Column("Type", TypeName = ColumnTypeNames.Int), ConcurrencyCheck, Required]
        public InvoiceTransactionType Type { get; set; }

        [Column("Comment", TypeName = ColumnTypeNames.NVarChar), ConcurrencyCheck, Required(AllowEmptyStrings = true)]
        public string Comment { get; set; }

        [Column("Timestamp", TypeName = ColumnTypeNames.BigInt), ConcurrencyCheck, Required]
        public byte[] Ticks { get; set; }
    }

    [SqlScope]
    public class InvoiceTransactionRepository : IInvoiceTransactionRepository
    {
      private readonly IInvoiceTransactionHandler invoiceTransactionHandler;

      public InvoiceTransactionRepository(IInvoiceTransactionHandler invoiceTransactionHandler)
      {
        this.invoiceTransactionHandler = invoiceTransactionHandler;
      }

      [SqlScope(true)]
      public Task CreateAsync(params InvoiceTransactionDbo[] invoiceTransactions)
      {
        return invoiceTransactionHandler.CreateAsync(invoiceTransactions);
      }
    }

    public interface IInvoiceTransactionRepository
    {
      [NotNull]
      Task CreateAsync([NotNull, ItemNotNull] params InvoiceTransactionDbo[] invoiceTransactions);
    }

    public class InvoiceTransactionHandler : EntityHandlerBase<InvoiceTransactionDbo>, IInvoiceTransactionHandler
    {
      public InvoiceTransactionHandler(IDataContextProvider dataContextProvider) : base(dataContextProvider, x => x.Id, x => x.Ticks)
      {
      }
    }

    public interface IInvoiceTransactionHandler
    {
      [NotNull]
      Task CreateAsync([NotNull, ItemNotNull] params InvoiceTransactionDbo[] invoiceTransactions);
    }
}